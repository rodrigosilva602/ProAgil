
>>> Resumo do Curso

############## SEÇÂO 1 - INTRODUÇÃO AO .NET CORE ########################

* AULA 1 - APRESENTAÇÃO
	- Apresenta as 15 seções do curso.
	- Mostra o projeto resultado final.
	
* AULA 2 - INTRODUÇÃO
	- Download das ferrementas VSCODE.
	- Criação do primeiro projeto console APP.
	- Comandos do VSCODE.
	- Primeiros comandos "Hello Word".

* AULA 3 - ANTES DE CONTINUAR 
	- Dicas de como prosseguir no curso

* AULA 4 - INSTALAR EXTENSOES .NET PARA VSCODE.
	- EXTENSOES .NET.
	
* AULA 5 - INICIANDO JOGO
	- Primeiras classes do Projeto "GAMETOP"
	- Parâmetros
	- Instâncias
	- Primeira execução
	
* AULA 6 - O JOGADOR
	- Criando a classe jogador
	- Criando métodos de ação
	- Construtores
	- Chamada de métodos
	
* AULA 7 ACOPLAMENTO E AULA 8 INTERFACE
	- Desacoplando a classe Jogador1.
	- Criando nova classe Jogador.
	- Inversão de controle (Jogadores Independentes).	
	- Erros causados pelo acoplamento.
	- Uma classe para cada jogador.
	- Criação da interface "IJogador" (Contrato).
	- Enviando interface como parâmetro.
	- Enviando nova instância como parâmetro.
	- Recebendo a interface como parâmetro.
	- Implementando a interface na nova classe.
	- removendo acoplamento.
	
* AULA 9 - A INVERSÃO
	- Recebendo mais de um parâmetros de interface
	- Chamando o método de cada interface.
	
* AULA 10 - VARIAS CAMADAS
	- Criando o Projeto GameTop.LIB no VSCODE.
	- Criando uma solution no VSCode.
	- Criando as referências entre projetos.
	- Transferindo as classes entre projetos.
	- Criando o projeto de interface.
	
* AULA 11 - Abrindo no VS 2017
	- Testando no VS2017
	- Verificando Estrutura.
	
* AULA 12 - Referências Using
	- Corrigindo erros de referências
	- Atralho CTRL + Ponto.
	- Setando Projeto Principal no VSCODE.
	
* AULA 13 - DEBUG VSCODE
	- Fazendo Debug no VSCODE.
	- Comando Watch no VSCODE.
	- Criando Classe Jogador3.
	- Testando desacoplamento.
	
* AULA 14 - GIT
	- Usando o GIT Integrado ao VSCODE.
	- Criando Arquivo GITIGNORE.
	- Criando arquivo README.

	
############## SEÇÂO 2 - ASP NET CORE API ########################

* AULA 15 - TEMPLATES WEB
	- Criação dos projetos .WEB/.API/.MVC
	- Explicando as estrutura do templates e diferenças

* AULA 16 - .NET VERSÕES 2.2 E 3.1
	- Explica as diferênças dos templates de acordo com a versão via VSCODE.
	
* AULA 17 - INÍCIO DO PROJETO
	- Alterando portas.
	- Configurando rotas.
	- Exeutando o projeto .API	

* AULA 18 - POSTMAN
	- Download do POSTMAN.
	- Chamada GET no POSTMAN.
	- Dicas do POSTMAN.
	
* AULA 19 - MODELS
	- Criando a classe "Evento" dentro do diretório model criado.
	- Criando método GET com parâmetro.
	- Utilizando p POSTMAN GET com parâmetro.
	
* AULA 20 - DATACONTEXT DO EF CORE
	- Preparando projeto para executar MIGRATIONS.
	- Criando DataContext.
	- Instalando SQLITE.
	- Refêrênciando SQLITE.
	- Setando a CONNECTIONSTRING do banco.
	- Criando o DBSET da Tabela.
	
* AULA 21 - BANCO DE DADOS
	- Comandos DOTNET EF.
	- Executando .NE MIGRATIONS.
	- Criando .NET MIGRATIONS.
	- Estrutura dos arquivos do MIGRATIONS.
	- Criando arquivo .DB.
	- Download do DBBrowser para SQLITE.
	- Abrindo arquivo .DB usando DBBrowser.
	
* AULA 22 - RETORNANDO DADOS
	- Inserindo dados com DBBrowser no Banco.
	- Criando construtor que recebe o Context.
	- Alterando ACTIONRESULT para retornar dados do banco "Context".
	- Executando API com POSTMAN.
	
* AULA 23 - TRYCATCH E STATUSCODE
	- Utilizando "IACTIONRESULT".
	- Tratamento de Erros.
	- Utilizando STATUSCODE500 para mensagens amigáveis.
	- Uso do APP.UserDeveloperExceptonPage.
	
* AULA 24 - RETORNO ASSÍNCRONO.
	- Utilizando o ASYNC na assinatura do método.
	- Utilizando o TASK na assinatura do método.
	- Utilizando o "TOLISTASYNC" "FIRSTORDEFAULT ASYNC".
	- Utilizando o AWAIT.
	
* AULA 25 - ENVIANDO AO GIT.

############## SEÇÂO 3 - ANGULAR ########################


* AULA 26 - ANGULAR, NODE E POSTMAN
	- Instalação do NODE.
	- Instalação do POSTMAN.
	- Instalação do NGX Bootstrap.
	
* AULA 27 - INSTALANDO E RODANDO
	- Instalação do ANGULAR.
	- Criação do primeiro projeto angular.
	
* AULA 28 - EXTENSOES ANGULAR
	- Alterando extensoes do GITIGNORE.
	- Incluindo extensoes ANGULAR Files.
	- Incluindo a extensão ANGULAR LANGUAGE SERVICE.
	- Incluindo a extensão ANGULAR2-SWITCHER.
	- Incluindo a extensão AUTO RENAME TAG.
	- Incluindo a extensão BRACKET PAIR COLORIZER.
	- Incluindo a extensão C# EXTENSIONS.
	- Incluindo a extensão DEBUGGER FOR CHROME.
	- Incluindo a extensão LIVE SERVER.
	- Incluindo a extensão MATERIAL ICON THEME.
	- Incluindo a extensão NPM.
	- Incluindo a extensão NUGET PACKAGE MANAGER.
	- Incluindo a extensão PATH INTELISENCE.
	- Incluindo a extensão PRETIER-CODE FORMATER.
	- Incluindo a extensão TSLINT.
	
* AULA 29 - APRESENTANDO O ANGULAR
	- Apresenta a arquitetura do projeto ANGULAR.
	- Apresenta arquivos importantes.
	- Edita HTML.
	- Executa projeto.
	
* AULA 30 - COMPONENTES
	- Anatomia
	- Criação de um componente.
	- Utilização de um componente e laços de repetição.
	
* AULA 31 - REQUESTS HTTP NO ANGULAR
	- Implementação para consumo da API.
	- Utilização do "HTTPCLIENT".
	- Método de consumo.
	- Inspecionando ERRO.

* AULA 32 - CORS ANGULAR E API
	- Corrigindo erros de CORS.
	- ADD CORS na STARTUP da API.
	- Incluindo CONSOLE.LOG do RESPONSE.
	
* AULA 33 - ADICIONANDO BOOTSTRAP
	- Instalando o "BOOTSTRAP".
	- Instalando o "FONTAWESOME-FREE".
	- Alterando HTML do componente.
	- Testando componente novo layout.

* AULA 34 - ENVIANDO AO GIT
	- Corrigindo GITIGNORE.
	
############## SEÇÂO 4 - ANGULAR (INTERPOLAÇÃO / DIRETIVAS / BINDING) ########################

* AULA 35 - BARRA DE NAVEGAÇÃO
	- Inserindo novos registros no banco.
	- Inserindo barra de navegação do BOOTSTRAP.
	- Editando barra de navegação.
	- Testando barra de navegação.
	- Testando RESPONSIVIDADE.
	
* AULA 36 - GRID DOS EVENTOS E AULA 37 - BINDING E INTERPOLAÇÃO
	- Alterando HTML do componente "Eventos".
	- Testando HTML do componente "Eventos".
	- Explicando o BINDING.
	- Carregando dados da API na grid.
	- Explicando INTERPOLAÇÃO.

* AULA 38 - NFIF
	- Utilizando NGIF.
	- Utilizando NGIF com negação.
	- Retornando Erro na API.
	- Testando e corrigindo erro da API.
	
	
* AULA 39 - ARQUIVOS ESTÁTICOS 
	- Incluindo "USESTATICFILES" no arquivo de configuração da API.
	- Incluindo imagens na pasta "WWWROOT" (Criar a pasta caso não exista).

	
* AULA 40 - PROPRIEDADE E EVENTO BINDING
	- Incluindo imagens no grid.
	- Chamando a imagem da API.
	- Alterando atributos da imagem.
	- Utilizando BINDING.
	- Incluindo ação do método "CLICK".
	- Executando o click do botão.
	
* AULA 41 - TWO-WAY DATA BINDING (FILTRANDO)
	- Referênciando o Modulo.
	- Criando variáveis de controle.
	- Utilizando o "TWO-WAY DATA BINDING" (Caixa de banana) para filtrar na grid.
	
* AULA 42 - UTILIZANDO PIPES NOS DADOS	
	- Utilizando PIPE para formatação de dados.
	- Dados tipo: Currency, maiusculo, minusculo...
	- Aplicando o PIPE na interpolação.
	
* AULA 43 - FILTRANDO GRID
	- Criando Propriedade e metodo para filtro.
	- Filtrando a GRID.
	
############## SEÇÂO 5 - .NET CORE E EF CORE (CAMADAS) ########################

* AULA 44 - SOLUÇÃO, DOMINIO E REPOSITORIO.
	- Criação do Projeto PROAGIL.DOMAIN.
	- Criação do projeto PROAGIL.REPOSITORY.
	- Criação da Solution PROAGIL.
	- Deletando arquivos desnecessários.
	
* AULA 45 - REFERÊNCIANDO PROJETOS
	
	- Referênciando Projeto DOMAIN dentro do projeto REPOSITORY.
	- Referênciando Projeto DOMAIN dentro do projeto API.	
	- Incluindo os projetos dentro da SOLUTION.
		* Domain project
		* Repository project 
		* API project
		
* AULA 46 - ENTIDADES PARTE 1
	- FLUXO ENTRE AS ENTIDADES (DESENHO)
	
* AULA 47 - ENTIDADES PARTE 2
	- Movendo classe da MODEL para a DOMAIN.
	- Adicionando propriedades à CLASSE.
	- Criando a classe "LOTE".
	- Criando a classe "PALESTRANTE".
	- Criando a classe "PALESTRANTEEVENTO".
	- Criando a classe "REDESOCIAL".
	- Criando a relação entre as entidades.
	
* AULA 48 - NOVO CONTEXTO
	- Dicas para convenção de nomes de propriedades
	- Movendo a classe de contexto.
	- Alterando a classe de contexto.
	- Criando os DBSETS para criação das tables.
	- Declarando as chaves para "PALESTRANTEEVENTO"	
	- Adicionando referência EntityFrameWorkCore.
	- Alterando o nome da Context.
	
* AULA 49 - RECRIANDO O BANCO DE DADOS.
	- Instalando SQLITE na REPOSITORY.
	- Testando o EF usando o .Net EF no terminal.
	- Adicionando as MIGRATIONS junto com as referências da API.
	- Corrigindo ERROS do projeto.
	- Criando as MIGRATIONS.
	- Revisando o Context.
	- Criando o banco de dados.
	- Abrindo e conferindo o banco.
	
* AULA 50 - PROJETO REPOSITORIOS - INTERFACES
	- Criando a interface da Repository.
	- Criando os metodos da interface.
	
* AULA 51 - REPOSITORIO - CLASSE PARTE 1 
	- Criando a Classe do respositorio.
	- Implementando a interface na classe.
	- Implementando metodos na Interface.
	- Ordenando os metodos.
	- Criando construtor e propriedades.
	- Implementando metodos gerais "GENÉRICOS".
	
	
* AULA 52 - REPOSITORIO - CLASSE PARTE 2
	- Implementando metodo GET dos eventos.
	
	
* AULA 53 - REPOSITORIO - CLASSE PARTE 3
	- Implementando metodo GET dos PALESTRANTES
	
	
* AULA 54 - CONTROLLER EVENTO 
	- Implementando método da EVENTOCONTROLLER.
		
	
* AULA 55 - TESTANDO CONTROLLER EVENTO
	- Testando Controller Evento.
	- Desafio, Criar Controller Palestrante.

* AULA 56 - TRACKER E NO TRACKER (EF CORE)
	- Uso do ASNOTRACKER
	
############## SEÇÂO 6 - ANGULAR (ORGANIZANDO PROJETO) ########################

* AULA 57 - INTERFACE MODELS
	- Criação das Interfaces (TypeScripts)

* AULA 58 - EVENTO SERVICE - PARTE 1
	- Criando diretório de serviços.
	- Criando o Service Eventos. 
	- Implementando o Service Eventos.
	
* AULA 59 - EVENTO SERVICE - PARTE 2 
	- Formas de inserir o provider.
	- Registrando serviços dentro do componente.
	
* AULA 60 - OBSERVABLE
	- Observable (Definição).
	- Utilizando as MODELS junto com o OBSERVABLE.
	
* AULA 61 - OBSERVABLE
	- Alterando texto do botão "IMAGEM".
	- Alterando exibição dos LOTES com JSON.
	- Incluindo Icone no HTML.
	
* AULA 62 - CRIANDO FILTRO PARA DATAPIPES
	- Criando PIPE para formatação de DATA.
	- Alterando o formato da hora.
	
* AULA 63 - NGX BOOTSTRAP 
	- Instalando o NGX-BOOTSTRAP.
	- Referênciando componentes na MODULE.
	
* AULA 64 - BOTOES E TOOLTIPS
	- Organizando o APP.Module.ts
	- Botões Alterar e Excluir.
	- Incluindo Botões com TOOLTIPS.
	- Agrupando BOTOES.
	
* AULA 65 - MODAL
	- Criando MODAL.
	- Criando referência para o MODAL.
	- Chamando MODAL pelo BOTÃO.
	
* AULA 66 - DROPDOWN MENU
	- Implementando DROPDOWN MENU.
	- Implementando MODULO ANIMATIONS.
	- Testando DROPDOWN MENU.
	
* AULA 67 - ENVIANDO AO GIT
	
############## SEÇÂO 7 - ANGULAR - REACTIVE FORMS ########################


* AULA 68 - CRIANDO FORMULÁRIO
	- Criando estrutura do formulário.
	
* AULA 69 - VALIDAÇÃO DO FORM - PARTE 1
	- Criando Validação do formuário
	
* AULA 70 - VALIDAÇÃO DO FORM - PARTE 2
	- Aperfeiçõando Validação do formulário
	
* AULA 71 - VALIDAÇÃO DO FORM - PARTE 3
	- Corrigindo exercício de validação
	
* AULA 72 - USANDO FORMBUILDER SERVICE
	- Usando FormBuilder para validação
	- Recuperando os valores do Form
	- Recuperando o status do Form
	- Desabilitando botão com Reactive Forms
	
* AULA 73 - DATE PICKER PT-BR
	- Usando Date Picker
	- Formatando Date Picker para PT-BR

* AULA 74 - GRANDE MODAL - ORGANIZANDO FORM
	- Alterando para MODAL maior.
	- Incluindo botão "NOVO EVENTO".
	- Chamando MODAL pelo botão.
	- Incluindo botões no MODAL.
	- Incluindo formatação dentro do MODAL.

* AULA 75 - REGISTRANDO EVENTO
	- Implementando INSERTS do Evento.

* AULA 76 - PROPOSTA DESAFIO
	- Exercício - Editar Evento.
	
* AULA 77 - DETALHANDO DESAFIO
	- Implementando Editar Evento.
	
* AULA 78 - RESOLVENDO DESAFIO
	- Implementando Editar Evento.
	
* AULA 79 - DELETANDO EVENTO
	- Implementando Deleta Evento.
	
* AULA 80 - ENVIANDO AO GIT


############## SEÇÂO 8 - AUTOMAPPER E DATA ANNOTATIONS ########################

* AULA 81 - Introdução
	- O que faremos.
	
* AULA 82 - Criando DTOs
	- Criando todas as classes de DTO.
	
* AULA 83 - REFERÊNCIA AUTOMAPPER
	- Referenciando AUTOMAPPER na API
	- Criando a chamada do AUTOMAPPER.
	- Criando a classe profile do AUTOMAPPER.
	
* AULA 84 - CONFIGURANDO MUITOS PARA MUITOS
	- Mapeando Muitos para muitos.
	
* AULA 85 - DTO NA CONTROLLER
	- Utilizando AUTOMAPPER na Controller.
	
* AULA 86 - CONTROLLER POST - DTO Reverso
	- Implementando .ReverseMap() no AUTOMAPPERPROFILE.
	
* AULA 87 - DTO metodo PUT
	- Implementando metodo PUT
	- Testando metodo PUT
	- Implementando ID para atualização.
	- Corrigindo duplicidades.
	- Testando metodo PUT
	
* AULA 88 - Data ANNOTATIONS
	- Aplicando DATAANNOTATIONS para Email.
	- Aplicando DATAANNOTATIONS para campo obrigatório.
	- DATAANNOTATIONS para TELEFONE.
	- DATAANNOTATIONS para Range numérico.
	- DATAANNOTATIONS para duas validações ou mais.
	- Varios DATAANNOTATIONS.
	
* AULA 89 - API CONTROLLER
	- Explicando [API CONTROLLER]
	- Explicando [FROM BODY]
	- Explicando [FROM BODY]
	- [API CONTROLLER] para DATAANNOTATIONS
	- MODELSTATE
	
* AULA 90 - ENVIANDO AO GIT


############## SEÇÂO 9 - ANGULAR, ROTAS, ALERTAS E MAIS ########################


* AULA 91 - ADICIONANDO NGX TOASTR 
	- Instalando NGX TOASTR
	- Implementando NGX TOASTR
	- referênciando NGX TOASTR
	- Testando NGX TOASTR
	- Inserindo NGX TOASTR nos Erros.
	- Adicionando tempo à mensagem.
	- Alterando a posição da mensagem.
	
* AULA 92 - Rapidas melhorias
	- Corrigindo formatações
	- Corrigindo formatação do DATA PICKER
	- Possivel erro de versão no formato de data "Não houve correção".
	- Testando ERRO de Data "Não Resolvido".
	
* AULA 93 - COMPONENTES: PALESTRANTE E CONTATO
	- Criando os componentes.	
	- Referênciando e organizando componentes.
	
* AULA 94 - ADICIONANDO ROTAS - Parte 01
	- Configurando rotas dos componentes.
	- Testando rotas.
	
* AULA 95 - ADICIONANDO ROTAS - Parte 02
	- Chamando Rotas.
	- Adicionando Links à rotas
	- Ativando links
	
* AULA 96 - ADICIONANDO ROTAS - Parte 03
	- Tratando rotas de URLs desconhecidas
	
* AULA 97 - Componente Título
	- Evitando Erro ao adicionar componente.
	- Adicionando componente.
	- Referênciando componente.
	- Adicionando componente.
	
* AULA 98 - @INPUT
	- Alternando entre titulos variável por meio do @INPUT
	
* AULA 99 - Enviando ao GIT.

############## SEÇÂO 10 - UPLOAD DE IMAGENS ########################

* AULA 100 - O que faremos?
	- Apresentação da sessão.
	
* AULA 101 - Upload na CONTROLLER
	- Implementação na controller
	- Implementação na STARTUP.CS
	
* AULA 102 - Botão Enviar Arquivo
	- Implementação no HTML
	- Implementação no TypeScript
	
* AULA 103 - Evento Target File
	- Implementação no HTML
	- Implementação no TypeScript
	
* AULA 104 - Realizando Upload
	- Implementando no "EVENTO.SERVICE.TS".
	- Implementando no "EVENTO.COMPONENTE.TS".
	- Testando e identificando Erro.
	
* AULA 105 - Upload de IMAGEM	
	- Corrigindo ERRO.
	- Ajuste no "EVENTO.SERVICE.TS".
	- Ajuste ao Atualizar.
	- Identificando falhas ao deletar
	
* AULA 106 - Refatoração
	- Criando metodo UPLOAD DE IMAGEM
	- Identificando falhas.
	- Corrigindo falhas.
	
* AULA 107 - Delete de Imagem alternativo
	- Implementando Delete alternativo da imagem
	- Identificando Erros.
	- Erro não corrigido. (Atenção erro não corrigido)
	
* AULA 108 - Forçar recarregar grid	
	- Ajuste ao recarregar grid.
	- Identificando Erros.  (Atenção erro não corrigido)
	
* AULA 109 - ENVIANDO AO GIT


############## SEÇÂO 11 - ASP NET CORE IDENTITY ########################

* AULA 110 - O que faremos?
	- Apresentando a seção.
	
* AULA 111 - Criando Entidades 
	- O que é Identity.
	- Instalando e referênciando Identity.
	- Criando as Identitys.
	- Parâmetros inteiros nas entidades.
	
* AULA 112 - Criando relacionamentos
	- Criando relacionamento no context.
	
* AULA 113 - Criando novo banco	
	- Deletando banco e MIGRATIONS
	- Criando nova MIGRATIONS
	- Corrigindo ERRO, pegando a ultima versão para todas as referência dos projetos .NET
	- Criando Banco de dados.
	- Validado se todas as novas tabelas foram criadas.
	
* AULA 114 - Configurações da Startup
	- Configurando a Startup
	- Implementações
	- Corrigindo referências para a versão 3.0 do ASP NET CORE.
	- Ajustes pessoais feitos para as ultimas versões.
	
* AULA 115 - JWT (JSON WEB TOKENS)
	- O que é JWT
	- Como funciona o JWT.
	
* AULA 116 - Configurando o JWT
	- Configurando o JWT na STARTUP.CS
	- Criando o TOKEN no APPSETTINGS.
	
* AULA 117 - Controller USER
	- Criando a Controller USER	
	- Criando Metodo GETUSER
	- Utilizando parâmetros de Login
	
* AULA 118 - USER DTO
	- Criando Classe UserDTO
	- Criando metodo Register na CONTROLLER.
	- Referênciando UserDTO na CONTROLLER.
	- Implementando MAP da UserDTO na HELPER / AUTOMAPPERPROFILE
	
* AULA 119 - Metodo Register
	- Implementando metodo register na CONTROLLER.
	
* AULA 120 - Metodos de LOGIN
	- Implementação do metodo de LOGIN na CONTROLLER.
	
* AULA 121 - Gerando TOKEN	
	- Implementando metodo de LOGIN

* AULA 122 - Registrando Usuário
	- Implementando metodo register na USERCONTOLLER.
	- Testando - Inserido Usuário via POSTMAN.
	- Debugando no VSCODE.
	- Atachando para DEBUG no VSCODE.
	- Inserindo usuário no banco.
	
* AULA 123 - LOGIN de Usuário	
	- Dica: ERRO usuário mesmo NOME.
	- Testando Metodo de LOGIN no POSTMAN.
	- Testando metodo GETUSER no POSTMAN.
	- Corrigindo ERRO na STARTUP.CS Incluindo AUTHENTICATION 
	- Testando metodo Register.
	- Enviando TOKEN nos metodos.
	- Testando metodo GETEVENTO com TOKEN no POSTMAN.
	
* AULA 124 - ENVIANDO AO GIT


############## SEÇÂO 12 - ANGULAR - JWT - .NET CORE IDENTITY ########################

* AULA 125 - CRIANDO LOGIN E REGISTRATION
	- Adicionando componente USER.
	- Adicionando componente LOGIN.
	- Adicionando componente REGISTRATION.
	- Adicionando componente CHILDREN.
	- Referênciando componentes no módulo.
	
* AULA 126 - INSERINDO CODIGO FONTE
	- Inserindo codigo fonte do REGISTRATION (Download do HTML) 
	- Inserindo codigo fonte do LOGIN (Download do HTML) 
	- Inserindo CSS do LOGIN (Download do CSS) 
	- Codigos também extraídos do site do bootstrap
	- Implementando TS do LOGIN
	- Explicando HTML do login
	
* AULA 127 - Tela Registrar Usuário	
	- Implementado TypeScript do Registration
	- Agrupando validação de usuário e senha.
	
* AULA 128 - FUNÇÃO COMPARAR SENHA
	- Implementando funcão comparar senha.
	- Validando campos do Registration.
	
* AULA 129 - NAV E AUTH SERVICE	
	- Criando componente AUTH.
	- Criando metodos na AUTH.TS
	
* AULA 130 - AUTH Service
	- Instalando @AUTH / ANGULAR-JWT.
	- Implementando metodo de login no TypeScript.
	- Implementando metodo de Register no TypeScript.
	- Implementando metodo Loggedin  no TypeScript.

* AULA 131 - Register Usuário - Parte 1
	- Implementando metodo "CADASTRAR USUARIO" no TypeScript
	- Testando envio do formulário
	
* AULA 132 - Register Usuário - Parte 2
	- Implementando metodo "CADASTRAR USUARIO" no TypeScript.
	- Tratamento de Erros no TypeScript.
	- Testando cadastrar usuários
	-> Atenção para o ERRO: 
				- Metodo Register
				- Deve Enviar Register na URL e não LOGIN
				
* AULA 133 - LOGIN
	- Implementação tela de LOGIN
	- Inclusão do botão "Entrar".
	- Ajustes Botão "Sair".
	- Correção de ERROS.
	
* AULA 134 - HEADER AUTENTICADO
	- Incluindo usuário no HEADER	
	- Ajustes de TOKEN na Evento.Service.TS
	- Testando Header Autenticado
	- Corrige Erro entrar Evento.
	- Corrige Erro ao cadastrar Evento.
	- Testando cadastro de Eventos.
	- Identifica Erro ao Navegar por URL.
	
* AULA 135 - ANGULAS GUARD
	- Criando Pasta AUTH
	- Gerando guardião
	- Implementando guardião
	- Testando guardião acessado pela URL.
	
* AULA 136 - INTERCEPTOR
	- Criando arquivo Interceptor.TS
	- Implementando Interceptor.TS
	- Referenciando Interceptor na MODULE.
	- Retirando codigos do metodo antigo do Evento.service.TS
	- Testando inteceptação de requisições.
	
* AULA 137 - Enviando ao GIT


############## SEÇÂO 13 - EVENTOS, LOTES E REDES SOCIAIS ########################
	
* AULA 138 - O que faremos?
	- Apresentação da seção.
	
* AULA 139 - Criando e Rotando Evento Edit
	- Criando o componente Evento Edit
	- Configurando rotas do Evento Edit
	- Editando HTML do Evento Edit
	- Referenciando Evento Edit no modulo.
	- Testando Evento Edit.
	
* AULA 140 - Copiando codigos
	- Incluindo botão Evento Detalhado.
	- Copiando HTML da tela Evento Edit.
	- Referênciando TAGS não existentes.
	- Referenciando TABS.
	- Instalando NGS MASK.	
	- Referênciando NGX MASK.
	- Testando Exibição Evento Edit
	- Implementando construtor.
	- Ajustando referência.
	
* AULA 141 - Copiando codigos Parte 2 
	- Copiando codigos tela Eventos
	- Comentando FieldSets Evento Edit
	
* AULA 142 - Form Groups LOTE E REDE SOCIAL
	- Implementando CSS Evento Edit	
	- Editando HTML Evento Edit.
	- Criando Metodo Validate no .TypeScript
	- Corrigindo Erros.
	- Criando FormGroups.
	
* AULA 143 - TROCANDO A IMAGEM
	- Baixando imagem para upload
	- Implementando Imagem.
	
* AULA 144 - FORM ARRAY GROUP
	- Implementando FORM ARRAY GROUP para carregar os LOTES e as REDES SOCIAIS.
	
* AULA 145 - FORM ARRAY GROUP - Adicionar e remover item
	- Criando FORM ARRAY GROUP para adicionar ao HTML.
	- Criando metodos de adicionar e remover LOTES E REDES SOCIAIS
	
* AULA 146 - Carregando Evento
	- Carregando dados do Evento em Evento Edit.
	- Implementação Carregar Evento.
	
* AULA 147 - Carregando Lote e Rede Social	
	- Implemetação para carregar LOTE e REDE SOCIAL.
	
* AULA 148 - Validação Dinâmica.
	- Ajusta dinâmica ao selcionar rede social.
	- Implemeta validações (EVENTO EDIT / LOTES / REDES SOCIAIS)
	
* AULA 149 - Metodo "Salvar"
	- Implementação do metodo "Salvar" das guias do Eventos Edit.

* AULA 150 - Deletando Relacionamento.
	- Implemetação pata Deletar Itens.
	- Implementação feita somenta da API.
	- Identificando erro: (OnFileChange)
	- Aguardando Correção.
	
* AULA 151 - Refatoração - API (PUT)
	- Ajustes de refatoração.
	
* AULA 152 - Listando Redes Sociais 
	- Corrigindo falhando ao selecionar redes sociais.

* AULA 153 - Mascaras R$ (Dinheito) Reais
	- Adicionando mascara de moeda.
	- Adicionando mascara HTTP.
	- Mascara HTTP não funcionou.
	
* AULA 154 - Resolvendo Nome Logado
	- Corrigindo Erro usuário logado "Nome desaparece".	
	- Testando NOME Usuário Logado.
	
* AULA 155 - Eviando ao GIT

############## SEÇÂO 14 - DEPLOYMENT E PUBLISH ########################

* AULA 156 - O que faremos?
	- Apresentação da seção
	
* AULA 157 - Bootswatch
	- Instalando o Bootswatch
	- Configurando CSS do Bootswatch
	- Testando o Bootswatch
	
* AULA 158 - Desafio (Solução)
	- Removendo barra de menu da tela de LOGIN.
	
* AULA 159 - DASHBOARD
	- Copiando o Bootsnipp (HTML)
	- Copiando CSS do Bootsnipp
	- Incluindo espaçamento no HTML
	- Testando o Bootsnipp
	
* AULA 160 - Deploy ANGULAR
	- Entrando no site ANGULAR .IO
	- Instalando MAP-Explorer
	- Exeutando o comando build-prod
	- Corrigindo erro do DATA Evento.
	- Executando comando ng serve, alterando porta e compilando
	- Testando Deploy.
	
* AULA 161 - Publish .NET WEB API
	- Entrando no diretorio da API
	- Executando o comando Publish
	- Acessando os arquivos gerados via terminal
	- Criando diretório Resources
	- Executando Publish
	- Corrigindo erro de TOKEN e STRING
	- Executando Publish
	- Corrigindo erro de banco
	- Logando e testando.
	
* AULA 162 - Enviando ao GIT

############## SEÇÂO 15 - Mudando para SQL Server no Docker #############
	
* AULA 163 - Mostrando Docker e EF Core SQL.
	- Testando funcionamento da aplicação
	- Instalando a Extensão do SQL Server para VSCODE.
	- Instalando a Extensão do Docker.
	- Alterando string de conexão
	- Instalando EntityFrameWorkCore.SQLSERVER
	- Alterando Startup.cs
	- Corrigindo incompatibilidade de versão entre EF Core X EF CORE SQLSERVER
	- Usando o comando "DOTNET RESTORE"
	- Usando o comando "DOTNET BUILD"
	
* AULA 164 - Rodando MIGRATIONS e Testando
	- Entrando no ditetório da Repository
	- Criando MIGRATIONS
	- Criando novo Banco de DADOS
	- Identificado Erro de Indice
	- Corrigindo ERRO de FK (Solução do GOOGLE)
	- Testando APP no novo banco criado
	- Acessando SQL Server dentro do VSCODE via Extensão SQL Server Instalada.
	- Executando Query dentro do VSCODE
	- Dicas de Versoes EF CORE X EF CORE SQL
	- Dicas de Extensão do Oracle
	- Dicas de Acesso ao Oracle via VSCODE.
	
	
	
		
	
	
	
	
	
	
	



	
	
	
	
	
	
	
	
	
	
	
	

	
	

	
	

	

	
	
				
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	

	
	
	
	

	
	
	

	
	
	


	
	
	

	

	
	
	
	
	
	
	
	

	
	
	

	

	
	
	







	
	

	

	
	
	
	
	

	


	
	

	

	

	
	
	
	
	
	

	
	
	
	
	
	
	



	
	
	
	
	
	
	
	
	

	

	

	

	
 
	
	